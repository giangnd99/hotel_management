/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package service.management.message;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ServiceOrderRequestMessageAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4617088371530104222L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ServiceOrderRequestMessageAvro\",\"namespace\":\"service.management.message\",\"fields\":[{\"name\":\"orderId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orderNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"serviceId\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"customerId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"roomId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"quantity\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"totalAmount\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"paymentStatus\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"specialInstructions\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orderDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"createdAt\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"updatedAt\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ServiceOrderRequestMessageAvro> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ServiceOrderRequestMessageAvro> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ServiceOrderRequestMessageAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ServiceOrderRequestMessageAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ServiceOrderRequestMessageAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ServiceOrderRequestMessageAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ServiceOrderRequestMessageAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ServiceOrderRequestMessageAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ServiceOrderRequestMessageAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String orderId;
  private java.lang.String orderNumber;
  private java.lang.Integer serviceId;
  private java.lang.String customerId;
  private java.lang.String roomId;
  private java.lang.Integer quantity;
  private java.lang.String totalAmount;
  private java.lang.String status;
  private java.lang.String paymentStatus;
  private java.lang.String specialInstructions;
  private java.lang.String orderDate;
  private java.lang.String createdAt;
  private java.lang.String updatedAt;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ServiceOrderRequestMessageAvro() {}

  /**
   * All-args constructor.
   * @param orderId The new value for orderId
   * @param orderNumber The new value for orderNumber
   * @param serviceId The new value for serviceId
   * @param customerId The new value for customerId
   * @param roomId The new value for roomId
   * @param quantity The new value for quantity
   * @param totalAmount The new value for totalAmount
   * @param status The new value for status
   * @param paymentStatus The new value for paymentStatus
   * @param specialInstructions The new value for specialInstructions
   * @param orderDate The new value for orderDate
   * @param createdAt The new value for createdAt
   * @param updatedAt The new value for updatedAt
   */
  public ServiceOrderRequestMessageAvro(java.lang.String orderId, java.lang.String orderNumber, java.lang.Integer serviceId, java.lang.String customerId, java.lang.String roomId, java.lang.Integer quantity, java.lang.String totalAmount, java.lang.String status, java.lang.String paymentStatus, java.lang.String specialInstructions, java.lang.String orderDate, java.lang.String createdAt, java.lang.String updatedAt) {
    this.orderId = orderId;
    this.orderNumber = orderNumber;
    this.serviceId = serviceId;
    this.customerId = customerId;
    this.roomId = roomId;
    this.quantity = quantity;
    this.totalAmount = totalAmount;
    this.status = status;
    this.paymentStatus = paymentStatus;
    this.specialInstructions = specialInstructions;
    this.orderDate = orderDate;
    this.createdAt = createdAt;
    this.updatedAt = updatedAt;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return orderId;
    case 1: return orderNumber;
    case 2: return serviceId;
    case 3: return customerId;
    case 4: return roomId;
    case 5: return quantity;
    case 6: return totalAmount;
    case 7: return status;
    case 8: return paymentStatus;
    case 9: return specialInstructions;
    case 10: return orderDate;
    case 11: return createdAt;
    case 12: return updatedAt;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: orderId = value$ != null ? value$.toString() : null; break;
    case 1: orderNumber = value$ != null ? value$.toString() : null; break;
    case 2: serviceId = (java.lang.Integer)value$; break;
    case 3: customerId = value$ != null ? value$.toString() : null; break;
    case 4: roomId = value$ != null ? value$.toString() : null; break;
    case 5: quantity = (java.lang.Integer)value$; break;
    case 6: totalAmount = value$ != null ? value$.toString() : null; break;
    case 7: status = value$ != null ? value$.toString() : null; break;
    case 8: paymentStatus = value$ != null ? value$.toString() : null; break;
    case 9: specialInstructions = value$ != null ? value$.toString() : null; break;
    case 10: orderDate = value$ != null ? value$.toString() : null; break;
    case 11: createdAt = value$ != null ? value$.toString() : null; break;
    case 12: updatedAt = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'orderId' field.
   * @return The value of the 'orderId' field.
   */
  public java.lang.String getOrderId() {
    return orderId;
  }


  /**
   * Sets the value of the 'orderId' field.
   * @param value the value to set.
   */
  public void setOrderId(java.lang.String value) {
    this.orderId = value;
  }

  /**
   * Gets the value of the 'orderNumber' field.
   * @return The value of the 'orderNumber' field.
   */
  public java.lang.String getOrderNumber() {
    return orderNumber;
  }


  /**
   * Sets the value of the 'orderNumber' field.
   * @param value the value to set.
   */
  public void setOrderNumber(java.lang.String value) {
    this.orderNumber = value;
  }

  /**
   * Gets the value of the 'serviceId' field.
   * @return The value of the 'serviceId' field.
   */
  public java.lang.Integer getServiceId() {
    return serviceId;
  }


  /**
   * Sets the value of the 'serviceId' field.
   * @param value the value to set.
   */
  public void setServiceId(java.lang.Integer value) {
    this.serviceId = value;
  }

  /**
   * Gets the value of the 'customerId' field.
   * @return The value of the 'customerId' field.
   */
  public java.lang.String getCustomerId() {
    return customerId;
  }


  /**
   * Sets the value of the 'customerId' field.
   * @param value the value to set.
   */
  public void setCustomerId(java.lang.String value) {
    this.customerId = value;
  }

  /**
   * Gets the value of the 'roomId' field.
   * @return The value of the 'roomId' field.
   */
  public java.lang.String getRoomId() {
    return roomId;
  }


  /**
   * Sets the value of the 'roomId' field.
   * @param value the value to set.
   */
  public void setRoomId(java.lang.String value) {
    this.roomId = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   * @return The value of the 'quantity' field.
   */
  public java.lang.Integer getQuantity() {
    return quantity;
  }


  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(java.lang.Integer value) {
    this.quantity = value;
  }

  /**
   * Gets the value of the 'totalAmount' field.
   * @return The value of the 'totalAmount' field.
   */
  public java.lang.String getTotalAmount() {
    return totalAmount;
  }


  /**
   * Sets the value of the 'totalAmount' field.
   * @param value the value to set.
   */
  public void setTotalAmount(java.lang.String value) {
    this.totalAmount = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'paymentStatus' field.
   * @return The value of the 'paymentStatus' field.
   */
  public java.lang.String getPaymentStatus() {
    return paymentStatus;
  }


  /**
   * Sets the value of the 'paymentStatus' field.
   * @param value the value to set.
   */
  public void setPaymentStatus(java.lang.String value) {
    this.paymentStatus = value;
  }

  /**
   * Gets the value of the 'specialInstructions' field.
   * @return The value of the 'specialInstructions' field.
   */
  public java.lang.String getSpecialInstructions() {
    return specialInstructions;
  }


  /**
   * Sets the value of the 'specialInstructions' field.
   * @param value the value to set.
   */
  public void setSpecialInstructions(java.lang.String value) {
    this.specialInstructions = value;
  }

  /**
   * Gets the value of the 'orderDate' field.
   * @return The value of the 'orderDate' field.
   */
  public java.lang.String getOrderDate() {
    return orderDate;
  }


  /**
   * Sets the value of the 'orderDate' field.
   * @param value the value to set.
   */
  public void setOrderDate(java.lang.String value) {
    this.orderDate = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.lang.String getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.lang.String value) {
    this.createdAt = value;
  }

  /**
   * Gets the value of the 'updatedAt' field.
   * @return The value of the 'updatedAt' field.
   */
  public java.lang.String getUpdatedAt() {
    return updatedAt;
  }


  /**
   * Sets the value of the 'updatedAt' field.
   * @param value the value to set.
   */
  public void setUpdatedAt(java.lang.String value) {
    this.updatedAt = value;
  }

  /**
   * Creates a new ServiceOrderRequestMessageAvro RecordBuilder.
   * @return A new ServiceOrderRequestMessageAvro RecordBuilder
   */
  public static service.management.message.ServiceOrderRequestMessageAvro.Builder newBuilder() {
    return new service.management.message.ServiceOrderRequestMessageAvro.Builder();
  }

  /**
   * Creates a new ServiceOrderRequestMessageAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ServiceOrderRequestMessageAvro RecordBuilder
   */
  public static service.management.message.ServiceOrderRequestMessageAvro.Builder newBuilder(service.management.message.ServiceOrderRequestMessageAvro.Builder other) {
    if (other == null) {
      return new service.management.message.ServiceOrderRequestMessageAvro.Builder();
    } else {
      return new service.management.message.ServiceOrderRequestMessageAvro.Builder(other);
    }
  }

  /**
   * Creates a new ServiceOrderRequestMessageAvro RecordBuilder by copying an existing ServiceOrderRequestMessageAvro instance.
   * @param other The existing instance to copy.
   * @return A new ServiceOrderRequestMessageAvro RecordBuilder
   */
  public static service.management.message.ServiceOrderRequestMessageAvro.Builder newBuilder(service.management.message.ServiceOrderRequestMessageAvro other) {
    if (other == null) {
      return new service.management.message.ServiceOrderRequestMessageAvro.Builder();
    } else {
      return new service.management.message.ServiceOrderRequestMessageAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for ServiceOrderRequestMessageAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ServiceOrderRequestMessageAvro>
    implements org.apache.avro.data.RecordBuilder<ServiceOrderRequestMessageAvro> {

    private java.lang.String orderId;
    private java.lang.String orderNumber;
    private java.lang.Integer serviceId;
    private java.lang.String customerId;
    private java.lang.String roomId;
    private java.lang.Integer quantity;
    private java.lang.String totalAmount;
    private java.lang.String status;
    private java.lang.String paymentStatus;
    private java.lang.String specialInstructions;
    private java.lang.String orderDate;
    private java.lang.String createdAt;
    private java.lang.String updatedAt;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(service.management.message.ServiceOrderRequestMessageAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.orderId)) {
        this.orderId = data().deepCopy(fields()[0].schema(), other.orderId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.orderNumber)) {
        this.orderNumber = data().deepCopy(fields()[1].schema(), other.orderNumber);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.serviceId)) {
        this.serviceId = data().deepCopy(fields()[2].schema(), other.serviceId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.customerId)) {
        this.customerId = data().deepCopy(fields()[3].schema(), other.customerId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.roomId)) {
        this.roomId = data().deepCopy(fields()[4].schema(), other.roomId);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.quantity)) {
        this.quantity = data().deepCopy(fields()[5].schema(), other.quantity);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.totalAmount)) {
        this.totalAmount = data().deepCopy(fields()[6].schema(), other.totalAmount);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.status)) {
        this.status = data().deepCopy(fields()[7].schema(), other.status);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.paymentStatus)) {
        this.paymentStatus = data().deepCopy(fields()[8].schema(), other.paymentStatus);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.specialInstructions)) {
        this.specialInstructions = data().deepCopy(fields()[9].schema(), other.specialInstructions);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.orderDate)) {
        this.orderDate = data().deepCopy(fields()[10].schema(), other.orderDate);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[11].schema(), other.createdAt);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.updatedAt)) {
        this.updatedAt = data().deepCopy(fields()[12].schema(), other.updatedAt);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
    }

    /**
     * Creates a Builder by copying an existing ServiceOrderRequestMessageAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(service.management.message.ServiceOrderRequestMessageAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.orderId)) {
        this.orderId = data().deepCopy(fields()[0].schema(), other.orderId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.orderNumber)) {
        this.orderNumber = data().deepCopy(fields()[1].schema(), other.orderNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.serviceId)) {
        this.serviceId = data().deepCopy(fields()[2].schema(), other.serviceId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.customerId)) {
        this.customerId = data().deepCopy(fields()[3].schema(), other.customerId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.roomId)) {
        this.roomId = data().deepCopy(fields()[4].schema(), other.roomId);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.quantity)) {
        this.quantity = data().deepCopy(fields()[5].schema(), other.quantity);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.totalAmount)) {
        this.totalAmount = data().deepCopy(fields()[6].schema(), other.totalAmount);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.status)) {
        this.status = data().deepCopy(fields()[7].schema(), other.status);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.paymentStatus)) {
        this.paymentStatus = data().deepCopy(fields()[8].schema(), other.paymentStatus);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.specialInstructions)) {
        this.specialInstructions = data().deepCopy(fields()[9].schema(), other.specialInstructions);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.orderDate)) {
        this.orderDate = data().deepCopy(fields()[10].schema(), other.orderDate);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[11].schema(), other.createdAt);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.updatedAt)) {
        this.updatedAt = data().deepCopy(fields()[12].schema(), other.updatedAt);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'orderId' field.
      * @return The value.
      */
    public java.lang.String getOrderId() {
      return orderId;
    }


    /**
      * Sets the value of the 'orderId' field.
      * @param value The value of 'orderId'.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder setOrderId(java.lang.String value) {
      validate(fields()[0], value);
      this.orderId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'orderId' field has been set.
      * @return True if the 'orderId' field has been set, false otherwise.
      */
    public boolean hasOrderId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'orderId' field.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder clearOrderId() {
      orderId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderNumber' field.
      * @return The value.
      */
    public java.lang.String getOrderNumber() {
      return orderNumber;
    }


    /**
      * Sets the value of the 'orderNumber' field.
      * @param value The value of 'orderNumber'.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder setOrderNumber(java.lang.String value) {
      validate(fields()[1], value);
      this.orderNumber = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'orderNumber' field has been set.
      * @return True if the 'orderNumber' field has been set, false otherwise.
      */
    public boolean hasOrderNumber() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'orderNumber' field.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder clearOrderNumber() {
      orderNumber = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'serviceId' field.
      * @return The value.
      */
    public java.lang.Integer getServiceId() {
      return serviceId;
    }


    /**
      * Sets the value of the 'serviceId' field.
      * @param value The value of 'serviceId'.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder setServiceId(java.lang.Integer value) {
      validate(fields()[2], value);
      this.serviceId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'serviceId' field has been set.
      * @return True if the 'serviceId' field has been set, false otherwise.
      */
    public boolean hasServiceId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'serviceId' field.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder clearServiceId() {
      serviceId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerId' field.
      * @return The value.
      */
    public java.lang.String getCustomerId() {
      return customerId;
    }


    /**
      * Sets the value of the 'customerId' field.
      * @param value The value of 'customerId'.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder setCustomerId(java.lang.String value) {
      validate(fields()[3], value);
      this.customerId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'customerId' field has been set.
      * @return True if the 'customerId' field has been set, false otherwise.
      */
    public boolean hasCustomerId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'customerId' field.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder clearCustomerId() {
      customerId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'roomId' field.
      * @return The value.
      */
    public java.lang.String getRoomId() {
      return roomId;
    }


    /**
      * Sets the value of the 'roomId' field.
      * @param value The value of 'roomId'.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder setRoomId(java.lang.String value) {
      validate(fields()[4], value);
      this.roomId = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'roomId' field has been set.
      * @return True if the 'roomId' field has been set, false otherwise.
      */
    public boolean hasRoomId() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'roomId' field.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder clearRoomId() {
      roomId = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'quantity' field.
      * @return The value.
      */
    public java.lang.Integer getQuantity() {
      return quantity;
    }


    /**
      * Sets the value of the 'quantity' field.
      * @param value The value of 'quantity'.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder setQuantity(java.lang.Integer value) {
      validate(fields()[5], value);
      this.quantity = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'quantity' field has been set.
      * @return True if the 'quantity' field has been set, false otherwise.
      */
    public boolean hasQuantity() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'quantity' field.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder clearQuantity() {
      quantity = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'totalAmount' field.
      * @return The value.
      */
    public java.lang.String getTotalAmount() {
      return totalAmount;
    }


    /**
      * Sets the value of the 'totalAmount' field.
      * @param value The value of 'totalAmount'.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder setTotalAmount(java.lang.String value) {
      validate(fields()[6], value);
      this.totalAmount = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'totalAmount' field has been set.
      * @return True if the 'totalAmount' field has been set, false otherwise.
      */
    public boolean hasTotalAmount() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'totalAmount' field.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder clearTotalAmount() {
      totalAmount = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder setStatus(java.lang.String value) {
      validate(fields()[7], value);
      this.status = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder clearStatus() {
      status = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'paymentStatus' field.
      * @return The value.
      */
    public java.lang.String getPaymentStatus() {
      return paymentStatus;
    }


    /**
      * Sets the value of the 'paymentStatus' field.
      * @param value The value of 'paymentStatus'.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder setPaymentStatus(java.lang.String value) {
      validate(fields()[8], value);
      this.paymentStatus = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'paymentStatus' field has been set.
      * @return True if the 'paymentStatus' field has been set, false otherwise.
      */
    public boolean hasPaymentStatus() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'paymentStatus' field.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder clearPaymentStatus() {
      paymentStatus = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'specialInstructions' field.
      * @return The value.
      */
    public java.lang.String getSpecialInstructions() {
      return specialInstructions;
    }


    /**
      * Sets the value of the 'specialInstructions' field.
      * @param value The value of 'specialInstructions'.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder setSpecialInstructions(java.lang.String value) {
      validate(fields()[9], value);
      this.specialInstructions = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'specialInstructions' field has been set.
      * @return True if the 'specialInstructions' field has been set, false otherwise.
      */
    public boolean hasSpecialInstructions() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'specialInstructions' field.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder clearSpecialInstructions() {
      specialInstructions = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderDate' field.
      * @return The value.
      */
    public java.lang.String getOrderDate() {
      return orderDate;
    }


    /**
      * Sets the value of the 'orderDate' field.
      * @param value The value of 'orderDate'.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder setOrderDate(java.lang.String value) {
      validate(fields()[10], value);
      this.orderDate = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'orderDate' field has been set.
      * @return True if the 'orderDate' field has been set, false otherwise.
      */
    public boolean hasOrderDate() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'orderDate' field.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder clearOrderDate() {
      orderDate = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.lang.String getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder setCreatedAt(java.lang.String value) {
      validate(fields()[11], value);
      this.createdAt = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder clearCreatedAt() {
      createdAt = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'updatedAt' field.
      * @return The value.
      */
    public java.lang.String getUpdatedAt() {
      return updatedAt;
    }


    /**
      * Sets the value of the 'updatedAt' field.
      * @param value The value of 'updatedAt'.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder setUpdatedAt(java.lang.String value) {
      validate(fields()[12], value);
      this.updatedAt = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'updatedAt' field has been set.
      * @return True if the 'updatedAt' field has been set, false otherwise.
      */
    public boolean hasUpdatedAt() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'updatedAt' field.
      * @return This builder.
      */
    public service.management.message.ServiceOrderRequestMessageAvro.Builder clearUpdatedAt() {
      updatedAt = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ServiceOrderRequestMessageAvro build() {
      try {
        ServiceOrderRequestMessageAvro record = new ServiceOrderRequestMessageAvro();
        record.orderId = fieldSetFlags()[0] ? this.orderId : (java.lang.String) defaultValue(fields()[0]);
        record.orderNumber = fieldSetFlags()[1] ? this.orderNumber : (java.lang.String) defaultValue(fields()[1]);
        record.serviceId = fieldSetFlags()[2] ? this.serviceId : (java.lang.Integer) defaultValue(fields()[2]);
        record.customerId = fieldSetFlags()[3] ? this.customerId : (java.lang.String) defaultValue(fields()[3]);
        record.roomId = fieldSetFlags()[4] ? this.roomId : (java.lang.String) defaultValue(fields()[4]);
        record.quantity = fieldSetFlags()[5] ? this.quantity : (java.lang.Integer) defaultValue(fields()[5]);
        record.totalAmount = fieldSetFlags()[6] ? this.totalAmount : (java.lang.String) defaultValue(fields()[6]);
        record.status = fieldSetFlags()[7] ? this.status : (java.lang.String) defaultValue(fields()[7]);
        record.paymentStatus = fieldSetFlags()[8] ? this.paymentStatus : (java.lang.String) defaultValue(fields()[8]);
        record.specialInstructions = fieldSetFlags()[9] ? this.specialInstructions : (java.lang.String) defaultValue(fields()[9]);
        record.orderDate = fieldSetFlags()[10] ? this.orderDate : (java.lang.String) defaultValue(fields()[10]);
        record.createdAt = fieldSetFlags()[11] ? this.createdAt : (java.lang.String) defaultValue(fields()[11]);
        record.updatedAt = fieldSetFlags()[12] ? this.updatedAt : (java.lang.String) defaultValue(fields()[12]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ServiceOrderRequestMessageAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<ServiceOrderRequestMessageAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ServiceOrderRequestMessageAvro>
    READER$ = (org.apache.avro.io.DatumReader<ServiceOrderRequestMessageAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.orderId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.orderId);
    }

    if (this.orderNumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.orderNumber);
    }

    if (this.serviceId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.serviceId);
    }

    if (this.customerId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.customerId);
    }

    if (this.roomId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.roomId);
    }

    if (this.quantity == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.quantity);
    }

    if (this.totalAmount == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.totalAmount);
    }

    if (this.status == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.status);
    }

    if (this.paymentStatus == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.paymentStatus);
    }

    if (this.specialInstructions == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.specialInstructions);
    }

    if (this.orderDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.orderDate);
    }

    if (this.createdAt == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.createdAt);
    }

    if (this.updatedAt == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.updatedAt);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.orderId = null;
      } else {
        this.orderId = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.orderNumber = null;
      } else {
        this.orderNumber = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.serviceId = null;
      } else {
        this.serviceId = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.customerId = null;
      } else {
        this.customerId = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.roomId = null;
      } else {
        this.roomId = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.quantity = null;
      } else {
        this.quantity = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.totalAmount = null;
      } else {
        this.totalAmount = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.status = null;
      } else {
        this.status = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.paymentStatus = null;
      } else {
        this.paymentStatus = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.specialInstructions = null;
      } else {
        this.specialInstructions = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.orderDate = null;
      } else {
        this.orderDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.createdAt = null;
      } else {
        this.createdAt = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.updatedAt = null;
      } else {
        this.updatedAt = in.readString();
      }

    } else {
      for (int i = 0; i < 13; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.orderId = null;
          } else {
            this.orderId = in.readString();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.orderNumber = null;
          } else {
            this.orderNumber = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.serviceId = null;
          } else {
            this.serviceId = in.readInt();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.customerId = null;
          } else {
            this.customerId = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.roomId = null;
          } else {
            this.roomId = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.quantity = null;
          } else {
            this.quantity = in.readInt();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.totalAmount = null;
          } else {
            this.totalAmount = in.readString();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.status = null;
          } else {
            this.status = in.readString();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.paymentStatus = null;
          } else {
            this.paymentStatus = in.readString();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.specialInstructions = null;
          } else {
            this.specialInstructions = in.readString();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.orderDate = null;
          } else {
            this.orderDate = in.readString();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.createdAt = null;
          } else {
            this.createdAt = in.readString();
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.updatedAt = null;
          } else {
            this.updatedAt = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










