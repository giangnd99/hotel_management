/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.poly.booking.management.domain.kafka.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class BookingRoomRequestAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3542403467690704069L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"BookingRoomRequestAvro\",\"namespace\":\"com.poly.booking.management.domain.kafka.model\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"sagaId\",\"type\":{\"type\":\"string\",\"logicalType\":\"uuid\"}},{\"name\":\"bookingId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"createdAt\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"processedAt\",\"type\":[\"null\",{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}],\"default\":null},{\"name\":\"type\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"sagaStatus\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"bookingStatus\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"price\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":10,\"scale\":2}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.UUIDConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<BookingRoomRequestAvro> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<BookingRoomRequestAvro> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<BookingRoomRequestAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<BookingRoomRequestAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<BookingRoomRequestAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this BookingRoomRequestAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a BookingRoomRequestAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a BookingRoomRequestAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static BookingRoomRequestAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.util.UUID id;
  private java.util.UUID sagaId;
  private java.lang.String bookingId;
  private java.time.Instant createdAt;
  private java.time.Instant processedAt;
  private java.lang.String type;
  private java.lang.String sagaStatus;
  private java.lang.String bookingStatus;
  private java.math.BigDecimal price;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public BookingRoomRequestAvro() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param sagaId The new value for sagaId
   * @param bookingId The new value for bookingId
   * @param createdAt The new value for createdAt
   * @param processedAt The new value for processedAt
   * @param type The new value for type
   * @param sagaStatus The new value for sagaStatus
   * @param bookingStatus The new value for bookingStatus
   * @param price The new value for price
   */
  public BookingRoomRequestAvro(java.util.UUID id, java.util.UUID sagaId, java.lang.String bookingId, java.time.Instant createdAt, java.time.Instant processedAt, java.lang.String type, java.lang.String sagaStatus, java.lang.String bookingStatus, java.math.BigDecimal price) {
    this.id = id;
    this.sagaId = sagaId;
    this.bookingId = bookingId;
    this.createdAt = createdAt.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.processedAt = processedAt;
    this.type = type;
    this.sagaStatus = sagaStatus;
    this.bookingStatus = bookingStatus;
    this.price = price;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return sagaId;
    case 2: return bookingId;
    case 3: return createdAt;
    case 4: return processedAt;
    case 5: return type;
    case 6: return sagaStatus;
    case 7: return bookingStatus;
    case 8: return price;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      new org.apache.avro.Conversions.UUIDConversion(),
      new org.apache.avro.Conversions.UUIDConversion(),
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null,
      null,
      null,
      null,
      new org.apache.avro.Conversions.DecimalConversion(),
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.util.UUID)value$; break;
    case 1: sagaId = (java.util.UUID)value$; break;
    case 2: bookingId = value$ != null ? value$.toString() : null; break;
    case 3: createdAt = (java.time.Instant)value$; break;
    case 4: processedAt = (java.time.Instant)value$; break;
    case 5: type = value$ != null ? value$.toString() : null; break;
    case 6: sagaStatus = value$ != null ? value$.toString() : null; break;
    case 7: bookingStatus = value$ != null ? value$.toString() : null; break;
    case 8: price = (java.math.BigDecimal)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.util.UUID getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.util.UUID value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'sagaId' field.
   * @return The value of the 'sagaId' field.
   */
  public java.util.UUID getSagaId() {
    return sagaId;
  }


  /**
   * Sets the value of the 'sagaId' field.
   * @param value the value to set.
   */
  public void setSagaId(java.util.UUID value) {
    this.sagaId = value;
  }

  /**
   * Gets the value of the 'bookingId' field.
   * @return The value of the 'bookingId' field.
   */
  public java.lang.String getBookingId() {
    return bookingId;
  }


  /**
   * Sets the value of the 'bookingId' field.
   * @param value the value to set.
   */
  public void setBookingId(java.lang.String value) {
    this.bookingId = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.time.Instant getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.time.Instant value) {
    this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'processedAt' field.
   * @return The value of the 'processedAt' field.
   */
  public java.time.Instant getProcessedAt() {
    return processedAt;
  }


  /**
   * Sets the value of the 'processedAt' field.
   * @param value the value to set.
   */
  public void setProcessedAt(java.time.Instant value) {
    this.processedAt = value;
  }

  /**
   * Gets the value of the 'type' field.
   * @return The value of the 'type' field.
   */
  public java.lang.String getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * @param value the value to set.
   */
  public void setType(java.lang.String value) {
    this.type = value;
  }

  /**
   * Gets the value of the 'sagaStatus' field.
   * @return The value of the 'sagaStatus' field.
   */
  public java.lang.String getSagaStatus() {
    return sagaStatus;
  }


  /**
   * Sets the value of the 'sagaStatus' field.
   * @param value the value to set.
   */
  public void setSagaStatus(java.lang.String value) {
    this.sagaStatus = value;
  }

  /**
   * Gets the value of the 'bookingStatus' field.
   * @return The value of the 'bookingStatus' field.
   */
  public java.lang.String getBookingStatus() {
    return bookingStatus;
  }


  /**
   * Sets the value of the 'bookingStatus' field.
   * @param value the value to set.
   */
  public void setBookingStatus(java.lang.String value) {
    this.bookingStatus = value;
  }

  /**
   * Gets the value of the 'price' field.
   * @return The value of the 'price' field.
   */
  public java.math.BigDecimal getPrice() {
    return price;
  }


  /**
   * Sets the value of the 'price' field.
   * @param value the value to set.
   */
  public void setPrice(java.math.BigDecimal value) {
    this.price = value;
  }

  /**
   * Creates a new BookingRoomRequestAvro RecordBuilder.
   * @return A new BookingRoomRequestAvro RecordBuilder
   */
  public static com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder newBuilder() {
    return new com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder();
  }

  /**
   * Creates a new BookingRoomRequestAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new BookingRoomRequestAvro RecordBuilder
   */
  public static com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder newBuilder(com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder other) {
    if (other == null) {
      return new com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder();
    } else {
      return new com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder(other);
    }
  }

  /**
   * Creates a new BookingRoomRequestAvro RecordBuilder by copying an existing BookingRoomRequestAvro instance.
   * @param other The existing instance to copy.
   * @return A new BookingRoomRequestAvro RecordBuilder
   */
  public static com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder newBuilder(com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro other) {
    if (other == null) {
      return new com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder();
    } else {
      return new com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for BookingRoomRequestAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<BookingRoomRequestAvro>
    implements org.apache.avro.data.RecordBuilder<BookingRoomRequestAvro> {

    private java.util.UUID id;
    private java.util.UUID sagaId;
    private java.lang.String bookingId;
    private java.time.Instant createdAt;
    private java.time.Instant processedAt;
    private java.lang.String type;
    private java.lang.String sagaStatus;
    private java.lang.String bookingStatus;
    private java.math.BigDecimal price;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.sagaId)) {
        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.bookingId)) {
        this.bookingId = data().deepCopy(fields()[2].schema(), other.bookingId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[3].schema(), other.createdAt);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.processedAt)) {
        this.processedAt = data().deepCopy(fields()[4].schema(), other.processedAt);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.type)) {
        this.type = data().deepCopy(fields()[5].schema(), other.type);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.sagaStatus)) {
        this.sagaStatus = data().deepCopy(fields()[6].schema(), other.sagaStatus);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.bookingStatus)) {
        this.bookingStatus = data().deepCopy(fields()[7].schema(), other.bookingStatus);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.price)) {
        this.price = data().deepCopy(fields()[8].schema(), other.price);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing BookingRoomRequestAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sagaId)) {
        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.bookingId)) {
        this.bookingId = data().deepCopy(fields()[2].schema(), other.bookingId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[3].schema(), other.createdAt);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.processedAt)) {
        this.processedAt = data().deepCopy(fields()[4].schema(), other.processedAt);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.type)) {
        this.type = data().deepCopy(fields()[5].schema(), other.type);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.sagaStatus)) {
        this.sagaStatus = data().deepCopy(fields()[6].schema(), other.sagaStatus);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.bookingStatus)) {
        this.bookingStatus = data().deepCopy(fields()[7].schema(), other.bookingStatus);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.price)) {
        this.price = data().deepCopy(fields()[8].schema(), other.price);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.util.UUID getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder setId(java.util.UUID value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sagaId' field.
      * @return The value.
      */
    public java.util.UUID getSagaId() {
      return sagaId;
    }


    /**
      * Sets the value of the 'sagaId' field.
      * @param value The value of 'sagaId'.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder setSagaId(java.util.UUID value) {
      validate(fields()[1], value);
      this.sagaId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sagaId' field has been set.
      * @return True if the 'sagaId' field has been set, false otherwise.
      */
    public boolean hasSagaId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sagaId' field.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder clearSagaId() {
      sagaId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'bookingId' field.
      * @return The value.
      */
    public java.lang.String getBookingId() {
      return bookingId;
    }


    /**
      * Sets the value of the 'bookingId' field.
      * @param value The value of 'bookingId'.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder setBookingId(java.lang.String value) {
      validate(fields()[2], value);
      this.bookingId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'bookingId' field has been set.
      * @return True if the 'bookingId' field has been set, false otherwise.
      */
    public boolean hasBookingId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'bookingId' field.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder clearBookingId() {
      bookingId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.time.Instant getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder setCreatedAt(java.time.Instant value) {
      validate(fields()[3], value);
      this.createdAt = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder clearCreatedAt() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'processedAt' field.
      * @return The value.
      */
    public java.time.Instant getProcessedAt() {
      return processedAt;
    }


    /**
      * Sets the value of the 'processedAt' field.
      * @param value The value of 'processedAt'.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder setProcessedAt(java.time.Instant value) {
      validate(fields()[4], value);
      this.processedAt = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'processedAt' field has been set.
      * @return True if the 'processedAt' field has been set, false otherwise.
      */
    public boolean hasProcessedAt() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'processedAt' field.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder clearProcessedAt() {
      processedAt = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * @return The value.
      */
    public java.lang.String getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * @param value The value of 'type'.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder setType(java.lang.String value) {
      validate(fields()[5], value);
      this.type = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'type' field.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder clearType() {
      type = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'sagaStatus' field.
      * @return The value.
      */
    public java.lang.String getSagaStatus() {
      return sagaStatus;
    }


    /**
      * Sets the value of the 'sagaStatus' field.
      * @param value The value of 'sagaStatus'.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder setSagaStatus(java.lang.String value) {
      validate(fields()[6], value);
      this.sagaStatus = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'sagaStatus' field has been set.
      * @return True if the 'sagaStatus' field has been set, false otherwise.
      */
    public boolean hasSagaStatus() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'sagaStatus' field.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder clearSagaStatus() {
      sagaStatus = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'bookingStatus' field.
      * @return The value.
      */
    public java.lang.String getBookingStatus() {
      return bookingStatus;
    }


    /**
      * Sets the value of the 'bookingStatus' field.
      * @param value The value of 'bookingStatus'.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder setBookingStatus(java.lang.String value) {
      validate(fields()[7], value);
      this.bookingStatus = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'bookingStatus' field has been set.
      * @return True if the 'bookingStatus' field has been set, false otherwise.
      */
    public boolean hasBookingStatus() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'bookingStatus' field.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder clearBookingStatus() {
      bookingStatus = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'price' field.
      * @return The value.
      */
    public java.math.BigDecimal getPrice() {
      return price;
    }


    /**
      * Sets the value of the 'price' field.
      * @param value The value of 'price'.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder setPrice(java.math.BigDecimal value) {
      validate(fields()[8], value);
      this.price = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'price' field has been set.
      * @return True if the 'price' field has been set, false otherwise.
      */
    public boolean hasPrice() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'price' field.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.BookingRoomRequestAvro.Builder clearPrice() {
      price = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public BookingRoomRequestAvro build() {
      try {
        BookingRoomRequestAvro record = new BookingRoomRequestAvro();
        record.id = fieldSetFlags()[0] ? this.id : (java.util.UUID) defaultValue(fields()[0]);
        record.sagaId = fieldSetFlags()[1] ? this.sagaId : (java.util.UUID) defaultValue(fields()[1]);
        record.bookingId = fieldSetFlags()[2] ? this.bookingId : (java.lang.String) defaultValue(fields()[2]);
        record.createdAt = fieldSetFlags()[3] ? this.createdAt : (java.time.Instant) defaultValue(fields()[3]);
        record.processedAt = fieldSetFlags()[4] ? this.processedAt : (java.time.Instant) defaultValue(fields()[4]);
        record.type = fieldSetFlags()[5] ? this.type : (java.lang.String) defaultValue(fields()[5]);
        record.sagaStatus = fieldSetFlags()[6] ? this.sagaStatus : (java.lang.String) defaultValue(fields()[6]);
        record.bookingStatus = fieldSetFlags()[7] ? this.bookingStatus : (java.lang.String) defaultValue(fields()[7]);
        record.price = fieldSetFlags()[8] ? this.price : (java.math.BigDecimal) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<BookingRoomRequestAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<BookingRoomRequestAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<BookingRoomRequestAvro>
    READER$ = (org.apache.avro.io.DatumReader<BookingRoomRequestAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










