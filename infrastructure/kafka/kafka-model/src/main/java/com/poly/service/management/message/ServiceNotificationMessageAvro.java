/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.poly.service.management.message;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ServiceNotificationMessageAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6678636262788476300L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ServiceNotificationMessageAvro\",\"namespace\":\"edu.poly.servicemanagement.messaging.message\",\"fields\":[{\"name\":\"orderId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orderNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customerId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"serviceId\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"serviceName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"notificationType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"title\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"message\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"status\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"createdAt\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ServiceNotificationMessageAvro> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ServiceNotificationMessageAvro> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ServiceNotificationMessageAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ServiceNotificationMessageAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ServiceNotificationMessageAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ServiceNotificationMessageAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ServiceNotificationMessageAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ServiceNotificationMessageAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ServiceNotificationMessageAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String orderId;
  private java.lang.String orderNumber;
  private java.lang.String customerId;
  private java.lang.Integer serviceId;
  private java.lang.String serviceName;
  private java.lang.String notificationType;
  private java.lang.String title;
  private java.lang.String message;
  private java.lang.String status;
  private java.lang.String createdAt;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ServiceNotificationMessageAvro() {}

  /**
   * All-args constructor.
   * @param orderId The new value for orderId
   * @param orderNumber The new value for orderNumber
   * @param customerId The new value for customerId
   * @param serviceId The new value for serviceId
   * @param serviceName The new value for serviceName
   * @param notificationType The new value for notificationType
   * @param title The new value for title
   * @param message The new value for message
   * @param status The new value for status
   * @param createdAt The new value for createdAt
   */
  public ServiceNotificationMessageAvro(java.lang.String orderId, java.lang.String orderNumber, java.lang.String customerId, java.lang.Integer serviceId, java.lang.String serviceName, java.lang.String notificationType, java.lang.String title, java.lang.String message, java.lang.String status, java.lang.String createdAt) {
    this.orderId = orderId;
    this.orderNumber = orderNumber;
    this.customerId = customerId;
    this.serviceId = serviceId;
    this.serviceName = serviceName;
    this.notificationType = notificationType;
    this.title = title;
    this.message = message;
    this.status = status;
    this.createdAt = createdAt;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return orderId;
    case 1: return orderNumber;
    case 2: return customerId;
    case 3: return serviceId;
    case 4: return serviceName;
    case 5: return notificationType;
    case 6: return title;
    case 7: return message;
    case 8: return status;
    case 9: return createdAt;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: orderId = value$ != null ? value$.toString() : null; break;
    case 1: orderNumber = value$ != null ? value$.toString() : null; break;
    case 2: customerId = value$ != null ? value$.toString() : null; break;
    case 3: serviceId = (java.lang.Integer)value$; break;
    case 4: serviceName = value$ != null ? value$.toString() : null; break;
    case 5: notificationType = value$ != null ? value$.toString() : null; break;
    case 6: title = value$ != null ? value$.toString() : null; break;
    case 7: message = value$ != null ? value$.toString() : null; break;
    case 8: status = value$ != null ? value$.toString() : null; break;
    case 9: createdAt = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'orderId' field.
   * @return The value of the 'orderId' field.
   */
  public java.lang.String getOrderId() {
    return orderId;
  }


  /**
   * Sets the value of the 'orderId' field.
   * @param value the value to set.
   */
  public void setOrderId(java.lang.String value) {
    this.orderId = value;
  }

  /**
   * Gets the value of the 'orderNumber' field.
   * @return The value of the 'orderNumber' field.
   */
  public java.lang.String getOrderNumber() {
    return orderNumber;
  }


  /**
   * Sets the value of the 'orderNumber' field.
   * @param value the value to set.
   */
  public void setOrderNumber(java.lang.String value) {
    this.orderNumber = value;
  }

  /**
   * Gets the value of the 'customerId' field.
   * @return The value of the 'customerId' field.
   */
  public java.lang.String getCustomerId() {
    return customerId;
  }


  /**
   * Sets the value of the 'customerId' field.
   * @param value the value to set.
   */
  public void setCustomerId(java.lang.String value) {
    this.customerId = value;
  }

  /**
   * Gets the value of the 'serviceId' field.
   * @return The value of the 'serviceId' field.
   */
  public java.lang.Integer getServiceId() {
    return serviceId;
  }


  /**
   * Sets the value of the 'serviceId' field.
   * @param value the value to set.
   */
  public void setServiceId(java.lang.Integer value) {
    this.serviceId = value;
  }

  /**
   * Gets the value of the 'serviceName' field.
   * @return The value of the 'serviceName' field.
   */
  public java.lang.String getServiceName() {
    return serviceName;
  }


  /**
   * Sets the value of the 'serviceName' field.
   * @param value the value to set.
   */
  public void setServiceName(java.lang.String value) {
    this.serviceName = value;
  }

  /**
   * Gets the value of the 'notificationType' field.
   * @return The value of the 'notificationType' field.
   */
  public java.lang.String getNotificationType() {
    return notificationType;
  }


  /**
   * Sets the value of the 'notificationType' field.
   * @param value the value to set.
   */
  public void setNotificationType(java.lang.String value) {
    this.notificationType = value;
  }

  /**
   * Gets the value of the 'title' field.
   * @return The value of the 'title' field.
   */
  public java.lang.String getTitle() {
    return title;
  }


  /**
   * Sets the value of the 'title' field.
   * @param value the value to set.
   */
  public void setTitle(java.lang.String value) {
    this.title = value;
  }

  /**
   * Gets the value of the 'message' field.
   * @return The value of the 'message' field.
   */
  public java.lang.String getMessage() {
    return message;
  }


  /**
   * Sets the value of the 'message' field.
   * @param value the value to set.
   */
  public void setMessage(java.lang.String value) {
    this.message = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public java.lang.String getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(java.lang.String value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'createdAt' field.
   * @return The value of the 'createdAt' field.
   */
  public java.lang.String getCreatedAt() {
    return createdAt;
  }


  /**
   * Sets the value of the 'createdAt' field.
   * @param value the value to set.
   */
  public void setCreatedAt(java.lang.String value) {
    this.createdAt = value;
  }

  /**
   * Creates a new ServiceNotificationMessageAvro RecordBuilder.
   * @return A new ServiceNotificationMessageAvro RecordBuilder
   */
  public static ServiceNotificationMessageAvro.Builder newBuilder() {
    return new ServiceNotificationMessageAvro.Builder();
  }

  /**
   * Creates a new ServiceNotificationMessageAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ServiceNotificationMessageAvro RecordBuilder
   */
  public static ServiceNotificationMessageAvro.Builder newBuilder(ServiceNotificationMessageAvro.Builder other) {
    if (other == null) {
      return new ServiceNotificationMessageAvro.Builder();
    } else {
      return new ServiceNotificationMessageAvro.Builder(other);
    }
  }

  /**
   * Creates a new ServiceNotificationMessageAvro RecordBuilder by copying an existing ServiceNotificationMessageAvro instance.
   * @param other The existing instance to copy.
   * @return A new ServiceNotificationMessageAvro RecordBuilder
   */
  public static ServiceNotificationMessageAvro.Builder newBuilder(ServiceNotificationMessageAvro other) {
    if (other == null) {
      return new ServiceNotificationMessageAvro.Builder();
    } else {
      return new ServiceNotificationMessageAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for ServiceNotificationMessageAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ServiceNotificationMessageAvro>
    implements org.apache.avro.data.RecordBuilder<ServiceNotificationMessageAvro> {

    private java.lang.String orderId;
    private java.lang.String orderNumber;
    private java.lang.String customerId;
    private java.lang.Integer serviceId;
    private java.lang.String serviceName;
    private java.lang.String notificationType;
    private java.lang.String title;
    private java.lang.String message;
    private java.lang.String status;
    private java.lang.String createdAt;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(ServiceNotificationMessageAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.orderId)) {
        this.orderId = data().deepCopy(fields()[0].schema(), other.orderId);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.orderNumber)) {
        this.orderNumber = data().deepCopy(fields()[1].schema(), other.orderNumber);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.customerId)) {
        this.customerId = data().deepCopy(fields()[2].schema(), other.customerId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.serviceId)) {
        this.serviceId = data().deepCopy(fields()[3].schema(), other.serviceId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.serviceName)) {
        this.serviceName = data().deepCopy(fields()[4].schema(), other.serviceName);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.notificationType)) {
        this.notificationType = data().deepCopy(fields()[5].schema(), other.notificationType);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.title)) {
        this.title = data().deepCopy(fields()[6].schema(), other.title);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.message)) {
        this.message = data().deepCopy(fields()[7].schema(), other.message);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.status)) {
        this.status = data().deepCopy(fields()[8].schema(), other.status);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[9].schema(), other.createdAt);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing ServiceNotificationMessageAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(ServiceNotificationMessageAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.orderId)) {
        this.orderId = data().deepCopy(fields()[0].schema(), other.orderId);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.orderNumber)) {
        this.orderNumber = data().deepCopy(fields()[1].schema(), other.orderNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.customerId)) {
        this.customerId = data().deepCopy(fields()[2].schema(), other.customerId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.serviceId)) {
        this.serviceId = data().deepCopy(fields()[3].schema(), other.serviceId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.serviceName)) {
        this.serviceName = data().deepCopy(fields()[4].schema(), other.serviceName);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.notificationType)) {
        this.notificationType = data().deepCopy(fields()[5].schema(), other.notificationType);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.title)) {
        this.title = data().deepCopy(fields()[6].schema(), other.title);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.message)) {
        this.message = data().deepCopy(fields()[7].schema(), other.message);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.status)) {
        this.status = data().deepCopy(fields()[8].schema(), other.status);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.createdAt)) {
        this.createdAt = data().deepCopy(fields()[9].schema(), other.createdAt);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'orderId' field.
      * @return The value.
      */
    public java.lang.String getOrderId() {
      return orderId;
    }


    /**
      * Sets the value of the 'orderId' field.
      * @param value The value of 'orderId'.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder setOrderId(java.lang.String value) {
      validate(fields()[0], value);
      this.orderId = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'orderId' field has been set.
      * @return True if the 'orderId' field has been set, false otherwise.
      */
    public boolean hasOrderId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'orderId' field.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder clearOrderId() {
      orderId = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderNumber' field.
      * @return The value.
      */
    public java.lang.String getOrderNumber() {
      return orderNumber;
    }


    /**
      * Sets the value of the 'orderNumber' field.
      * @param value The value of 'orderNumber'.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder setOrderNumber(java.lang.String value) {
      validate(fields()[1], value);
      this.orderNumber = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'orderNumber' field has been set.
      * @return True if the 'orderNumber' field has been set, false otherwise.
      */
    public boolean hasOrderNumber() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'orderNumber' field.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder clearOrderNumber() {
      orderNumber = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerId' field.
      * @return The value.
      */
    public java.lang.String getCustomerId() {
      return customerId;
    }


    /**
      * Sets the value of the 'customerId' field.
      * @param value The value of 'customerId'.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder setCustomerId(java.lang.String value) {
      validate(fields()[2], value);
      this.customerId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'customerId' field has been set.
      * @return True if the 'customerId' field has been set, false otherwise.
      */
    public boolean hasCustomerId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'customerId' field.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder clearCustomerId() {
      customerId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'serviceId' field.
      * @return The value.
      */
    public java.lang.Integer getServiceId() {
      return serviceId;
    }


    /**
      * Sets the value of the 'serviceId' field.
      * @param value The value of 'serviceId'.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder setServiceId(java.lang.Integer value) {
      validate(fields()[3], value);
      this.serviceId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'serviceId' field has been set.
      * @return True if the 'serviceId' field has been set, false otherwise.
      */
    public boolean hasServiceId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'serviceId' field.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder clearServiceId() {
      serviceId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'serviceName' field.
      * @return The value.
      */
    public java.lang.String getServiceName() {
      return serviceName;
    }


    /**
      * Sets the value of the 'serviceName' field.
      * @param value The value of 'serviceName'.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder setServiceName(java.lang.String value) {
      validate(fields()[4], value);
      this.serviceName = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'serviceName' field has been set.
      * @return True if the 'serviceName' field has been set, false otherwise.
      */
    public boolean hasServiceName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'serviceName' field.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder clearServiceName() {
      serviceName = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'notificationType' field.
      * @return The value.
      */
    public java.lang.String getNotificationType() {
      return notificationType;
    }


    /**
      * Sets the value of the 'notificationType' field.
      * @param value The value of 'notificationType'.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder setNotificationType(java.lang.String value) {
      validate(fields()[5], value);
      this.notificationType = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'notificationType' field has been set.
      * @return True if the 'notificationType' field has been set, false otherwise.
      */
    public boolean hasNotificationType() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'notificationType' field.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder clearNotificationType() {
      notificationType = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'title' field.
      * @return The value.
      */
    public java.lang.String getTitle() {
      return title;
    }


    /**
      * Sets the value of the 'title' field.
      * @param value The value of 'title'.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder setTitle(java.lang.String value) {
      validate(fields()[6], value);
      this.title = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'title' field has been set.
      * @return True if the 'title' field has been set, false otherwise.
      */
    public boolean hasTitle() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'title' field.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder clearTitle() {
      title = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'message' field.
      * @return The value.
      */
    public java.lang.String getMessage() {
      return message;
    }


    /**
      * Sets the value of the 'message' field.
      * @param value The value of 'message'.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder setMessage(java.lang.String value) {
      validate(fields()[7], value);
      this.message = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'message' field has been set.
      * @return True if the 'message' field has been set, false otherwise.
      */
    public boolean hasMessage() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'message' field.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder clearMessage() {
      message = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public java.lang.String getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder setStatus(java.lang.String value) {
      validate(fields()[8], value);
      this.status = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder clearStatus() {
      status = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'createdAt' field.
      * @return The value.
      */
    public java.lang.String getCreatedAt() {
      return createdAt;
    }


    /**
      * Sets the value of the 'createdAt' field.
      * @param value The value of 'createdAt'.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder setCreatedAt(java.lang.String value) {
      validate(fields()[9], value);
      this.createdAt = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'createdAt' field has been set.
      * @return True if the 'createdAt' field has been set, false otherwise.
      */
    public boolean hasCreatedAt() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'createdAt' field.
      * @return This builder.
      */
    public ServiceNotificationMessageAvro.Builder clearCreatedAt() {
      createdAt = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ServiceNotificationMessageAvro build() {
      try {
        ServiceNotificationMessageAvro record = new ServiceNotificationMessageAvro();
        record.orderId = fieldSetFlags()[0] ? this.orderId : (java.lang.String) defaultValue(fields()[0]);
        record.orderNumber = fieldSetFlags()[1] ? this.orderNumber : (java.lang.String) defaultValue(fields()[1]);
        record.customerId = fieldSetFlags()[2] ? this.customerId : (java.lang.String) defaultValue(fields()[2]);
        record.serviceId = fieldSetFlags()[3] ? this.serviceId : (java.lang.Integer) defaultValue(fields()[3]);
        record.serviceName = fieldSetFlags()[4] ? this.serviceName : (java.lang.String) defaultValue(fields()[4]);
        record.notificationType = fieldSetFlags()[5] ? this.notificationType : (java.lang.String) defaultValue(fields()[5]);
        record.title = fieldSetFlags()[6] ? this.title : (java.lang.String) defaultValue(fields()[6]);
        record.message = fieldSetFlags()[7] ? this.message : (java.lang.String) defaultValue(fields()[7]);
        record.status = fieldSetFlags()[8] ? this.status : (java.lang.String) defaultValue(fields()[8]);
        record.createdAt = fieldSetFlags()[9] ? this.createdAt : (java.lang.String) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ServiceNotificationMessageAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<ServiceNotificationMessageAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ServiceNotificationMessageAvro>
    READER$ = (org.apache.avro.io.DatumReader<ServiceNotificationMessageAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.orderId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.orderId);
    }

    if (this.orderNumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.orderNumber);
    }

    if (this.customerId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.customerId);
    }

    if (this.serviceId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.serviceId);
    }

    if (this.serviceName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.serviceName);
    }

    if (this.notificationType == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.notificationType);
    }

    if (this.title == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.title);
    }

    if (this.message == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.message);
    }

    if (this.status == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.status);
    }

    if (this.createdAt == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.createdAt);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.orderId = null;
      } else {
        this.orderId = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.orderNumber = null;
      } else {
        this.orderNumber = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.customerId = null;
      } else {
        this.customerId = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.serviceId = null;
      } else {
        this.serviceId = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.serviceName = null;
      } else {
        this.serviceName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.notificationType = null;
      } else {
        this.notificationType = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.title = null;
      } else {
        this.title = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.message = null;
      } else {
        this.message = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.status = null;
      } else {
        this.status = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.createdAt = null;
      } else {
        this.createdAt = in.readString();
      }

    } else {
      for (int i = 0; i < 10; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.orderId = null;
          } else {
            this.orderId = in.readString();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.orderNumber = null;
          } else {
            this.orderNumber = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.customerId = null;
          } else {
            this.customerId = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.serviceId = null;
          } else {
            this.serviceId = in.readInt();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.serviceName = null;
          } else {
            this.serviceName = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.notificationType = null;
          } else {
            this.notificationType = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.title = null;
          } else {
            this.title = in.readString();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.message = null;
          } else {
            this.message = in.readString();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.status = null;
          } else {
            this.status = in.readString();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.createdAt = null;
          } else {
            this.createdAt = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










