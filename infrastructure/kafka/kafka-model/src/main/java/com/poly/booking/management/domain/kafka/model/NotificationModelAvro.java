/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.poly.booking.management.domain.kafka.model;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class NotificationModelAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6519132413497161288L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"NotificationModelAvro\",\"namespace\":\"com.poly.booking.management.domain.kafka.model\",\"fields\":[{\"name\":\"id\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"sagaId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"bookingId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"customerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"qrCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"checkInTime\",\"type\":{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}},{\"name\":\"notificationStatus\",\"type\":{\"type\":\"enum\",\"name\":\"NotificationStatus\",\"symbols\":[\"SUCCESS\",\"FAILED\",\"PENDING\",\"CANCELLED\"]}},{\"name\":\"bookingStatus\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"failureMessages\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<NotificationModelAvro> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<NotificationModelAvro> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<NotificationModelAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<NotificationModelAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<NotificationModelAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this NotificationModelAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a NotificationModelAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a NotificationModelAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static NotificationModelAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String id;
  private java.lang.String sagaId;
  private java.lang.String bookingId;
  private java.lang.String customerId;
  private java.lang.String qrCode;
  private java.time.Instant checkInTime;
  private com.poly.booking.management.domain.kafka.model.NotificationStatus notificationStatus;
  private java.lang.String bookingStatus;
  private java.util.List<java.lang.String> failureMessages;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public NotificationModelAvro() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param sagaId The new value for sagaId
   * @param bookingId The new value for bookingId
   * @param customerId The new value for customerId
   * @param qrCode The new value for qrCode
   * @param checkInTime The new value for checkInTime
   * @param notificationStatus The new value for notificationStatus
   * @param bookingStatus The new value for bookingStatus
   * @param failureMessages The new value for failureMessages
   */
  public NotificationModelAvro(java.lang.String id, java.lang.String sagaId, java.lang.String bookingId, java.lang.String customerId, java.lang.String qrCode, java.time.Instant checkInTime, com.poly.booking.management.domain.kafka.model.NotificationStatus notificationStatus, java.lang.String bookingStatus, java.util.List<java.lang.String> failureMessages) {
    this.id = id;
    this.sagaId = sagaId;
    this.bookingId = bookingId;
    this.customerId = customerId;
    this.qrCode = qrCode;
    this.checkInTime = checkInTime.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
    this.notificationStatus = notificationStatus;
    this.bookingStatus = bookingStatus;
    this.failureMessages = failureMessages;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return sagaId;
    case 2: return bookingId;
    case 3: return customerId;
    case 4: return qrCode;
    case 5: return checkInTime;
    case 6: return notificationStatus;
    case 7: return bookingStatus;
    case 8: return failureMessages;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  private static final org.apache.avro.Conversion<?>[] conversions =
      new org.apache.avro.Conversion<?>[] {
      null,
      null,
      null,
      null,
      null,
      new org.apache.avro.data.TimeConversions.TimestampMillisConversion(),
      null,
      null,
      null,
      null
  };

  @Override
  public org.apache.avro.Conversion<?> getConversion(int field) {
    return conversions[field];
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = value$ != null ? value$.toString() : null; break;
    case 1: sagaId = value$ != null ? value$.toString() : null; break;
    case 2: bookingId = value$ != null ? value$.toString() : null; break;
    case 3: customerId = value$ != null ? value$.toString() : null; break;
    case 4: qrCode = value$ != null ? value$.toString() : null; break;
    case 5: checkInTime = (java.time.Instant)value$; break;
    case 6: notificationStatus = (com.poly.booking.management.domain.kafka.model.NotificationStatus)value$; break;
    case 7: bookingStatus = value$ != null ? value$.toString() : null; break;
    case 8: failureMessages = (java.util.List<java.lang.String>)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'sagaId' field.
   * @return The value of the 'sagaId' field.
   */
  public java.lang.String getSagaId() {
    return sagaId;
  }


  /**
   * Sets the value of the 'sagaId' field.
   * @param value the value to set.
   */
  public void setSagaId(java.lang.String value) {
    this.sagaId = value;
  }

  /**
   * Gets the value of the 'bookingId' field.
   * @return The value of the 'bookingId' field.
   */
  public java.lang.String getBookingId() {
    return bookingId;
  }


  /**
   * Sets the value of the 'bookingId' field.
   * @param value the value to set.
   */
  public void setBookingId(java.lang.String value) {
    this.bookingId = value;
  }

  /**
   * Gets the value of the 'customerId' field.
   * @return The value of the 'customerId' field.
   */
  public java.lang.String getCustomerId() {
    return customerId;
  }


  /**
   * Sets the value of the 'customerId' field.
   * @param value the value to set.
   */
  public void setCustomerId(java.lang.String value) {
    this.customerId = value;
  }

  /**
   * Gets the value of the 'qrCode' field.
   * @return The value of the 'qrCode' field.
   */
  public java.lang.String getQrCode() {
    return qrCode;
  }


  /**
   * Sets the value of the 'qrCode' field.
   * @param value the value to set.
   */
  public void setQrCode(java.lang.String value) {
    this.qrCode = value;
  }

  /**
   * Gets the value of the 'checkInTime' field.
   * @return The value of the 'checkInTime' field.
   */
  public java.time.Instant getCheckInTime() {
    return checkInTime;
  }


  /**
   * Sets the value of the 'checkInTime' field.
   * @param value the value to set.
   */
  public void setCheckInTime(java.time.Instant value) {
    this.checkInTime = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
  }

  /**
   * Gets the value of the 'notificationStatus' field.
   * @return The value of the 'notificationStatus' field.
   */
  public com.poly.booking.management.domain.kafka.model.NotificationStatus getNotificationStatus() {
    return notificationStatus;
  }


  /**
   * Sets the value of the 'notificationStatus' field.
   * @param value the value to set.
   */
  public void setNotificationStatus(com.poly.booking.management.domain.kafka.model.NotificationStatus value) {
    this.notificationStatus = value;
  }

  /**
   * Gets the value of the 'bookingStatus' field.
   * @return The value of the 'bookingStatus' field.
   */
  public java.lang.String getBookingStatus() {
    return bookingStatus;
  }


  /**
   * Sets the value of the 'bookingStatus' field.
   * @param value the value to set.
   */
  public void setBookingStatus(java.lang.String value) {
    this.bookingStatus = value;
  }

  /**
   * Gets the value of the 'failureMessages' field.
   * @return The value of the 'failureMessages' field.
   */
  public java.util.List<java.lang.String> getFailureMessages() {
    return failureMessages;
  }


  /**
   * Sets the value of the 'failureMessages' field.
   * @param value the value to set.
   */
  public void setFailureMessages(java.util.List<java.lang.String> value) {
    this.failureMessages = value;
  }

  /**
   * Creates a new NotificationModelAvro RecordBuilder.
   * @return A new NotificationModelAvro RecordBuilder
   */
  public static com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder newBuilder() {
    return new com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder();
  }

  /**
   * Creates a new NotificationModelAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new NotificationModelAvro RecordBuilder
   */
  public static com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder newBuilder(com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder other) {
    if (other == null) {
      return new com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder();
    } else {
      return new com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder(other);
    }
  }

  /**
   * Creates a new NotificationModelAvro RecordBuilder by copying an existing NotificationModelAvro instance.
   * @param other The existing instance to copy.
   * @return A new NotificationModelAvro RecordBuilder
   */
  public static com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder newBuilder(com.poly.booking.management.domain.kafka.model.NotificationModelAvro other) {
    if (other == null) {
      return new com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder();
    } else {
      return new com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for NotificationModelAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<NotificationModelAvro>
    implements org.apache.avro.data.RecordBuilder<NotificationModelAvro> {

    private java.lang.String id;
    private java.lang.String sagaId;
    private java.lang.String bookingId;
    private java.lang.String customerId;
    private java.lang.String qrCode;
    private java.time.Instant checkInTime;
    private com.poly.booking.management.domain.kafka.model.NotificationStatus notificationStatus;
    private java.lang.String bookingStatus;
    private java.util.List<java.lang.String> failureMessages;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.sagaId)) {
        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.bookingId)) {
        this.bookingId = data().deepCopy(fields()[2].schema(), other.bookingId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.customerId)) {
        this.customerId = data().deepCopy(fields()[3].schema(), other.customerId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.qrCode)) {
        this.qrCode = data().deepCopy(fields()[4].schema(), other.qrCode);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.checkInTime)) {
        this.checkInTime = data().deepCopy(fields()[5].schema(), other.checkInTime);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.notificationStatus)) {
        this.notificationStatus = data().deepCopy(fields()[6].schema(), other.notificationStatus);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.bookingStatus)) {
        this.bookingStatus = data().deepCopy(fields()[7].schema(), other.bookingStatus);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.failureMessages)) {
        this.failureMessages = data().deepCopy(fields()[8].schema(), other.failureMessages);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing NotificationModelAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.poly.booking.management.domain.kafka.model.NotificationModelAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sagaId)) {
        this.sagaId = data().deepCopy(fields()[1].schema(), other.sagaId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.bookingId)) {
        this.bookingId = data().deepCopy(fields()[2].schema(), other.bookingId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.customerId)) {
        this.customerId = data().deepCopy(fields()[3].schema(), other.customerId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.qrCode)) {
        this.qrCode = data().deepCopy(fields()[4].schema(), other.qrCode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.checkInTime)) {
        this.checkInTime = data().deepCopy(fields()[5].schema(), other.checkInTime);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.notificationStatus)) {
        this.notificationStatus = data().deepCopy(fields()[6].schema(), other.notificationStatus);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.bookingStatus)) {
        this.bookingStatus = data().deepCopy(fields()[7].schema(), other.bookingStatus);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.failureMessages)) {
        this.failureMessages = data().deepCopy(fields()[8].schema(), other.failureMessages);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.String getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sagaId' field.
      * @return The value.
      */
    public java.lang.String getSagaId() {
      return sagaId;
    }


    /**
      * Sets the value of the 'sagaId' field.
      * @param value The value of 'sagaId'.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder setSagaId(java.lang.String value) {
      validate(fields()[1], value);
      this.sagaId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sagaId' field has been set.
      * @return True if the 'sagaId' field has been set, false otherwise.
      */
    public boolean hasSagaId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sagaId' field.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder clearSagaId() {
      sagaId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'bookingId' field.
      * @return The value.
      */
    public java.lang.String getBookingId() {
      return bookingId;
    }


    /**
      * Sets the value of the 'bookingId' field.
      * @param value The value of 'bookingId'.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder setBookingId(java.lang.String value) {
      validate(fields()[2], value);
      this.bookingId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'bookingId' field has been set.
      * @return True if the 'bookingId' field has been set, false otherwise.
      */
    public boolean hasBookingId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'bookingId' field.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder clearBookingId() {
      bookingId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerId' field.
      * @return The value.
      */
    public java.lang.String getCustomerId() {
      return customerId;
    }


    /**
      * Sets the value of the 'customerId' field.
      * @param value The value of 'customerId'.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder setCustomerId(java.lang.String value) {
      validate(fields()[3], value);
      this.customerId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'customerId' field has been set.
      * @return True if the 'customerId' field has been set, false otherwise.
      */
    public boolean hasCustomerId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'customerId' field.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder clearCustomerId() {
      customerId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'qrCode' field.
      * @return The value.
      */
    public java.lang.String getQrCode() {
      return qrCode;
    }


    /**
      * Sets the value of the 'qrCode' field.
      * @param value The value of 'qrCode'.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder setQrCode(java.lang.String value) {
      validate(fields()[4], value);
      this.qrCode = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'qrCode' field has been set.
      * @return True if the 'qrCode' field has been set, false otherwise.
      */
    public boolean hasQrCode() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'qrCode' field.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder clearQrCode() {
      qrCode = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'checkInTime' field.
      * @return The value.
      */
    public java.time.Instant getCheckInTime() {
      return checkInTime;
    }


    /**
      * Sets the value of the 'checkInTime' field.
      * @param value The value of 'checkInTime'.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder setCheckInTime(java.time.Instant value) {
      validate(fields()[5], value);
      this.checkInTime = value.truncatedTo(java.time.temporal.ChronoUnit.MILLIS);
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'checkInTime' field has been set.
      * @return True if the 'checkInTime' field has been set, false otherwise.
      */
    public boolean hasCheckInTime() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'checkInTime' field.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder clearCheckInTime() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'notificationStatus' field.
      * @return The value.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationStatus getNotificationStatus() {
      return notificationStatus;
    }


    /**
      * Sets the value of the 'notificationStatus' field.
      * @param value The value of 'notificationStatus'.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder setNotificationStatus(com.poly.booking.management.domain.kafka.model.NotificationStatus value) {
      validate(fields()[6], value);
      this.notificationStatus = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'notificationStatus' field has been set.
      * @return True if the 'notificationStatus' field has been set, false otherwise.
      */
    public boolean hasNotificationStatus() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'notificationStatus' field.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder clearNotificationStatus() {
      notificationStatus = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'bookingStatus' field.
      * @return The value.
      */
    public java.lang.String getBookingStatus() {
      return bookingStatus;
    }


    /**
      * Sets the value of the 'bookingStatus' field.
      * @param value The value of 'bookingStatus'.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder setBookingStatus(java.lang.String value) {
      validate(fields()[7], value);
      this.bookingStatus = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'bookingStatus' field has been set.
      * @return True if the 'bookingStatus' field has been set, false otherwise.
      */
    public boolean hasBookingStatus() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'bookingStatus' field.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder clearBookingStatus() {
      bookingStatus = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'failureMessages' field.
      * @return The value.
      */
    public java.util.List<java.lang.String> getFailureMessages() {
      return failureMessages;
    }


    /**
      * Sets the value of the 'failureMessages' field.
      * @param value The value of 'failureMessages'.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder setFailureMessages(java.util.List<java.lang.String> value) {
      validate(fields()[8], value);
      this.failureMessages = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'failureMessages' field has been set.
      * @return True if the 'failureMessages' field has been set, false otherwise.
      */
    public boolean hasFailureMessages() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'failureMessages' field.
      * @return This builder.
      */
    public com.poly.booking.management.domain.kafka.model.NotificationModelAvro.Builder clearFailureMessages() {
      failureMessages = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public NotificationModelAvro build() {
      try {
        NotificationModelAvro record = new NotificationModelAvro();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.sagaId = fieldSetFlags()[1] ? this.sagaId : (java.lang.String) defaultValue(fields()[1]);
        record.bookingId = fieldSetFlags()[2] ? this.bookingId : (java.lang.String) defaultValue(fields()[2]);
        record.customerId = fieldSetFlags()[3] ? this.customerId : (java.lang.String) defaultValue(fields()[3]);
        record.qrCode = fieldSetFlags()[4] ? this.qrCode : (java.lang.String) defaultValue(fields()[4]);
        record.checkInTime = fieldSetFlags()[5] ? this.checkInTime : (java.time.Instant) defaultValue(fields()[5]);
        record.notificationStatus = fieldSetFlags()[6] ? this.notificationStatus : (com.poly.booking.management.domain.kafka.model.NotificationStatus) defaultValue(fields()[6]);
        record.bookingStatus = fieldSetFlags()[7] ? this.bookingStatus : (java.lang.String) defaultValue(fields()[7]);
        record.failureMessages = fieldSetFlags()[8] ? this.failureMessages : (java.util.List<java.lang.String>) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<NotificationModelAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<NotificationModelAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<NotificationModelAvro>
    READER$ = (org.apache.avro.io.DatumReader<NotificationModelAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










