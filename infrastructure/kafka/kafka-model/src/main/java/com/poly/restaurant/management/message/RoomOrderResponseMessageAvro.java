/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.poly.restaurant.management.message;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class RoomOrderResponseMessageAvro extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2405331826039136162L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"RoomOrderResponseMessageAvro\",\"namespace\":\"com.poly.restaurant.management.message\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"orderId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"roomId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"customerId\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"responseStatus\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"message\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"requestType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<RoomOrderResponseMessageAvro> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<RoomOrderResponseMessageAvro> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<RoomOrderResponseMessageAvro> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<RoomOrderResponseMessageAvro> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<RoomOrderResponseMessageAvro> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this RoomOrderResponseMessageAvro to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a RoomOrderResponseMessageAvro from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a RoomOrderResponseMessageAvro instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static RoomOrderResponseMessageAvro fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private java.lang.String id;
  private java.lang.String orderId;
  private java.lang.String roomId;
  private java.lang.String customerId;
  private java.lang.String responseStatus;
  private java.lang.String message;
  private java.lang.String requestType;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public RoomOrderResponseMessageAvro() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param orderId The new value for orderId
   * @param roomId The new value for roomId
   * @param customerId The new value for customerId
   * @param responseStatus The new value for responseStatus
   * @param message The new value for message
   * @param requestType The new value for requestType
   */
  public RoomOrderResponseMessageAvro(java.lang.String id, java.lang.String orderId, java.lang.String roomId, java.lang.String customerId, java.lang.String responseStatus, java.lang.String message, java.lang.String requestType) {
    this.id = id;
    this.orderId = orderId;
    this.roomId = roomId;
    this.customerId = customerId;
    this.responseStatus = responseStatus;
    this.message = message;
    this.requestType = requestType;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return orderId;
    case 2: return roomId;
    case 3: return customerId;
    case 4: return responseStatus;
    case 5: return message;
    case 6: return requestType;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = value$ != null ? value$.toString() : null; break;
    case 1: orderId = value$ != null ? value$.toString() : null; break;
    case 2: roomId = value$ != null ? value$.toString() : null; break;
    case 3: customerId = value$ != null ? value$.toString() : null; break;
    case 4: responseStatus = value$ != null ? value$.toString() : null; break;
    case 5: message = value$ != null ? value$.toString() : null; break;
    case 6: requestType = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.String getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.String value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'orderId' field.
   * @return The value of the 'orderId' field.
   */
  public java.lang.String getOrderId() {
    return orderId;
  }


  /**
   * Sets the value of the 'orderId' field.
   * @param value the value to set.
   */
  public void setOrderId(java.lang.String value) {
    this.orderId = value;
  }

  /**
   * Gets the value of the 'roomId' field.
   * @return The value of the 'roomId' field.
   */
  public java.lang.String getRoomId() {
    return roomId;
  }


  /**
   * Sets the value of the 'roomId' field.
   * @param value the value to set.
   */
  public void setRoomId(java.lang.String value) {
    this.roomId = value;
  }

  /**
   * Gets the value of the 'customerId' field.
   * @return The value of the 'customerId' field.
   */
  public java.lang.String getCustomerId() {
    return customerId;
  }


  /**
   * Sets the value of the 'customerId' field.
   * @param value the value to set.
   */
  public void setCustomerId(java.lang.String value) {
    this.customerId = value;
  }

  /**
   * Gets the value of the 'responseStatus' field.
   * @return The value of the 'responseStatus' field.
   */
  public java.lang.String getResponseStatus() {
    return responseStatus;
  }


  /**
   * Sets the value of the 'responseStatus' field.
   * @param value the value to set.
   */
  public void setResponseStatus(java.lang.String value) {
    this.responseStatus = value;
  }

  /**
   * Gets the value of the 'message' field.
   * @return The value of the 'message' field.
   */
  public java.lang.String getMessage() {
    return message;
  }


  /**
   * Sets the value of the 'message' field.
   * @param value the value to set.
   */
  public void setMessage(java.lang.String value) {
    this.message = value;
  }

  /**
   * Gets the value of the 'requestType' field.
   * @return The value of the 'requestType' field.
   */
  public java.lang.String getRequestType() {
    return requestType;
  }


  /**
   * Sets the value of the 'requestType' field.
   * @param value the value to set.
   */
  public void setRequestType(java.lang.String value) {
    this.requestType = value;
  }

  /**
   * Creates a new RoomOrderResponseMessageAvro RecordBuilder.
   * @return A new RoomOrderResponseMessageAvro RecordBuilder
   */
  public static com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder newBuilder() {
    return new com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder();
  }

  /**
   * Creates a new RoomOrderResponseMessageAvro RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new RoomOrderResponseMessageAvro RecordBuilder
   */
  public static com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder newBuilder(com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder other) {
    if (other == null) {
      return new com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder();
    } else {
      return new com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder(other);
    }
  }

  /**
   * Creates a new RoomOrderResponseMessageAvro RecordBuilder by copying an existing RoomOrderResponseMessageAvro instance.
   * @param other The existing instance to copy.
   * @return A new RoomOrderResponseMessageAvro RecordBuilder
   */
  public static com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder newBuilder(com.poly.restaurant.management.message.RoomOrderResponseMessageAvro other) {
    if (other == null) {
      return new com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder();
    } else {
      return new com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder(other);
    }
  }

  /**
   * RecordBuilder for RoomOrderResponseMessageAvro instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<RoomOrderResponseMessageAvro>
    implements org.apache.avro.data.RecordBuilder<RoomOrderResponseMessageAvro> {

    private java.lang.String id;
    private java.lang.String orderId;
    private java.lang.String roomId;
    private java.lang.String customerId;
    private java.lang.String responseStatus;
    private java.lang.String message;
    private java.lang.String requestType;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.orderId)) {
        this.orderId = data().deepCopy(fields()[1].schema(), other.orderId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.roomId)) {
        this.roomId = data().deepCopy(fields()[2].schema(), other.roomId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.customerId)) {
        this.customerId = data().deepCopy(fields()[3].schema(), other.customerId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.responseStatus)) {
        this.responseStatus = data().deepCopy(fields()[4].schema(), other.responseStatus);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.message)) {
        this.message = data().deepCopy(fields()[5].schema(), other.message);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.requestType)) {
        this.requestType = data().deepCopy(fields()[6].schema(), other.requestType);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing RoomOrderResponseMessageAvro instance
     * @param other The existing instance to copy.
     */
    private Builder(com.poly.restaurant.management.message.RoomOrderResponseMessageAvro other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.orderId)) {
        this.orderId = data().deepCopy(fields()[1].schema(), other.orderId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.roomId)) {
        this.roomId = data().deepCopy(fields()[2].schema(), other.roomId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.customerId)) {
        this.customerId = data().deepCopy(fields()[3].schema(), other.customerId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.responseStatus)) {
        this.responseStatus = data().deepCopy(fields()[4].schema(), other.responseStatus);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.message)) {
        this.message = data().deepCopy(fields()[5].schema(), other.message);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.requestType)) {
        this.requestType = data().deepCopy(fields()[6].schema(), other.requestType);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.String getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder setId(java.lang.String value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'orderId' field.
      * @return The value.
      */
    public java.lang.String getOrderId() {
      return orderId;
    }


    /**
      * Sets the value of the 'orderId' field.
      * @param value The value of 'orderId'.
      * @return This builder.
      */
    public com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder setOrderId(java.lang.String value) {
      validate(fields()[1], value);
      this.orderId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'orderId' field has been set.
      * @return True if the 'orderId' field has been set, false otherwise.
      */
    public boolean hasOrderId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'orderId' field.
      * @return This builder.
      */
    public com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder clearOrderId() {
      orderId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'roomId' field.
      * @return The value.
      */
    public java.lang.String getRoomId() {
      return roomId;
    }


    /**
      * Sets the value of the 'roomId' field.
      * @param value The value of 'roomId'.
      * @return This builder.
      */
    public com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder setRoomId(java.lang.String value) {
      validate(fields()[2], value);
      this.roomId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'roomId' field has been set.
      * @return True if the 'roomId' field has been set, false otherwise.
      */
    public boolean hasRoomId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'roomId' field.
      * @return This builder.
      */
    public com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder clearRoomId() {
      roomId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerId' field.
      * @return The value.
      */
    public java.lang.String getCustomerId() {
      return customerId;
    }


    /**
      * Sets the value of the 'customerId' field.
      * @param value The value of 'customerId'.
      * @return This builder.
      */
    public com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder setCustomerId(java.lang.String value) {
      validate(fields()[3], value);
      this.customerId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'customerId' field has been set.
      * @return True if the 'customerId' field has been set, false otherwise.
      */
    public boolean hasCustomerId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'customerId' field.
      * @return This builder.
      */
    public com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder clearCustomerId() {
      customerId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'responseStatus' field.
      * @return The value.
      */
    public java.lang.String getResponseStatus() {
      return responseStatus;
    }


    /**
      * Sets the value of the 'responseStatus' field.
      * @param value The value of 'responseStatus'.
      * @return This builder.
      */
    public com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder setResponseStatus(java.lang.String value) {
      validate(fields()[4], value);
      this.responseStatus = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'responseStatus' field has been set.
      * @return True if the 'responseStatus' field has been set, false otherwise.
      */
    public boolean hasResponseStatus() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'responseStatus' field.
      * @return This builder.
      */
    public com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder clearResponseStatus() {
      responseStatus = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'message' field.
      * @return The value.
      */
    public java.lang.String getMessage() {
      return message;
    }


    /**
      * Sets the value of the 'message' field.
      * @param value The value of 'message'.
      * @return This builder.
      */
    public com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder setMessage(java.lang.String value) {
      validate(fields()[5], value);
      this.message = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'message' field has been set.
      * @return True if the 'message' field has been set, false otherwise.
      */
    public boolean hasMessage() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'message' field.
      * @return This builder.
      */
    public com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder clearMessage() {
      message = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'requestType' field.
      * @return The value.
      */
    public java.lang.String getRequestType() {
      return requestType;
    }


    /**
      * Sets the value of the 'requestType' field.
      * @param value The value of 'requestType'.
      * @return This builder.
      */
    public com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder setRequestType(java.lang.String value) {
      validate(fields()[6], value);
      this.requestType = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'requestType' field has been set.
      * @return True if the 'requestType' field has been set, false otherwise.
      */
    public boolean hasRequestType() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'requestType' field.
      * @return This builder.
      */
    public com.poly.restaurant.management.message.RoomOrderResponseMessageAvro.Builder clearRequestType() {
      requestType = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public RoomOrderResponseMessageAvro build() {
      try {
        RoomOrderResponseMessageAvro record = new RoomOrderResponseMessageAvro();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.String) defaultValue(fields()[0]);
        record.orderId = fieldSetFlags()[1] ? this.orderId : (java.lang.String) defaultValue(fields()[1]);
        record.roomId = fieldSetFlags()[2] ? this.roomId : (java.lang.String) defaultValue(fields()[2]);
        record.customerId = fieldSetFlags()[3] ? this.customerId : (java.lang.String) defaultValue(fields()[3]);
        record.responseStatus = fieldSetFlags()[4] ? this.responseStatus : (java.lang.String) defaultValue(fields()[4]);
        record.message = fieldSetFlags()[5] ? this.message : (java.lang.String) defaultValue(fields()[5]);
        record.requestType = fieldSetFlags()[6] ? this.requestType : (java.lang.String) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<RoomOrderResponseMessageAvro>
    WRITER$ = (org.apache.avro.io.DatumWriter<RoomOrderResponseMessageAvro>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<RoomOrderResponseMessageAvro>
    READER$ = (org.apache.avro.io.DatumReader<RoomOrderResponseMessageAvro>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.id);
    }

    if (this.orderId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.orderId);
    }

    if (this.roomId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.roomId);
    }

    if (this.customerId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.customerId);
    }

    if (this.responseStatus == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.responseStatus);
    }

    if (this.message == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.message);
    }

    if (this.requestType == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.requestType);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.orderId = null;
      } else {
        this.orderId = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.roomId = null;
      } else {
        this.roomId = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.customerId = null;
      } else {
        this.customerId = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.responseStatus = null;
      } else {
        this.responseStatus = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.message = null;
      } else {
        this.message = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.requestType = null;
      } else {
        this.requestType = in.readString();
      }

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readString();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.orderId = null;
          } else {
            this.orderId = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.roomId = null;
          } else {
            this.roomId = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.customerId = null;
          } else {
            this.customerId = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.responseStatus = null;
          } else {
            this.responseStatus = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.message = null;
          } else {
            this.message = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.requestType = null;
          } else {
            this.requestType = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










